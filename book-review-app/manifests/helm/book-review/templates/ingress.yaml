{{- if .Values.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "book-review.fullname" . }}-ingress
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "book-review.labels" . | nindent 4 }}
  annotations:
    # ALB Controller annotations
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: {{ .Values.ingress.scheme }}
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
    {{- if .Values.ingress.sslRedirect }}
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    {{- end }}
    
    # Health check configuration
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-path: /
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    
    {{- if .Values.ingress.certificateArn }}
    # SSL certificate
    alb.ingress.kubernetes.io/certificate-arn: {{ .Values.ingress.certificateArn }}
    {{- end }}
    
    # Custom tags
    alb.ingress.kubernetes.io/tags: Environment={{ .Values.global.environment | default "dev" }},Project={{ include "book-review.name" . }}
    
    {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  rules:
    {{- if .Values.ingress.hosts }}
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          # Frontend routes
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ include "book-review.fullname" $ }}-frontend
                port:
                  number: {{ $.Values.frontend.service.port }}
          # Backend API routes
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: {{ include "book-review.fullname" $ }}-backend
                port:
                  number: {{ $.Values.backend.service.port }}
          {{- if $.Values.ingress.argocd.enabled }}
          # ArgoCD routes
          - path: /argocd
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  number: 80
          {{- end }}
          {{- range .paths }}
          - path: {{ .path }}
            pathType: {{ .pathType | default "Prefix" }}
            backend:
              service:
                name: {{ .service.name }}
                port:
                  number: {{ .service.port }}
          {{- end }}
    {{- end }}
    {{- end }}
    
    # Default rule without host (for ALB DNS name access)
    - http:
        paths:
          # Frontend routes
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ include "book-review.fullname" . }}-frontend
                port:
                  number: {{ .Values.frontend.service.port }}
          # Backend API routes  
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: {{ include "book-review.fullname" . }}-backend
                port:
                  number: {{ .Values.backend.service.port }}
          {{- if .Values.ingress.argocd.enabled }}
          # ArgoCD routes
          - path: /argocd
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  number: 80
          {{- end }}
{{- end }} 