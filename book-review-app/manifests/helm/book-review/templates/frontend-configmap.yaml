{{- if .Values.frontend.enabled }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "book-review.fullname" . }}-frontend-nginx-config
  labels:
    {{- include "book-review.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
data:
  default.conf: |
    server {
        listen 80;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Serve custom index.html with API fix
        location = / {
            add_header Content-Type text/html;
            return 200 '<!doctype html><html lang="en"><head><meta charset="UTF-8"/><meta name="viewport" content="width=device-width,initial-scale=1"/><title>Book Review App</title><script>
(function() {
    const originalOpen = XMLHttpRequest.prototype.open;
    XMLHttpRequest.prototype.open = function(method, url, async, user, password) {
        if (typeof url === "string" && url.includes("localhost:3000/api")) {
            url = url.replace("http://localhost:3000/api", "/api").replace("localhost:3000/api", "/api");
            console.log("Redirected API call to:", url);
        }
        return originalOpen.call(this, method, url, async, user, password);
    };
    
    const originalFetch = window.fetch;
    window.fetch = function(url, options) {
        if (typeof url === "string" && url.includes("localhost:3000/api")) {
            url = url.replace("http://localhost:3000/api", "/api").replace("localhost:3000/api", "/api");
            console.log("Redirected fetch call to:", url);
        }
        return originalFetch.call(this, url, options);
    };
    
    console.log("API interception loaded successfully");
})();
</script><script defer="defer" src="/static/js/main.219b0101.js"></script></head><body><div id="root"></div></body></html>';
        }

        # Serve static files
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Proxy API calls to backend service
        location /api/ {
            proxy_pass http://{{ include "book-review.fullname" . }}-backend:3000/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
{{- end }} 