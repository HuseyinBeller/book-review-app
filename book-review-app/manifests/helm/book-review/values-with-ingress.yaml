# Values file for deployment with ALB Ingress
# This configuration enables both the application and ArgoCD access via single ALB
#
# Storage Configuration:
# - Uses custom EBS GP3 storage class for MongoDB with 3000 IOPS and 125 MB/s throughput
# - Storage class is created as part of this Helm chart deployment
# - 20GB volume size optimized for MongoDB performance
# - Encryption enabled for security compliance

# Global configuration
global:
  imageRegistry: ""
  imagePullSecrets: []
  environment: "dev"

# Frontend configuration - ClusterIP for ALB
frontend:
  enabled: true
  image:
    registry: docker.io
    repository: huseyinbeller/book-review-frontend
    tag: latest
    pullPolicy: IfNotPresent
  
  replicaCount: 2
  
  service:
    type: ClusterIP  # Use ClusterIP for ALB ingress
    port: 80
    targetPort: 80
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  
  env:
    apiBaseUrl: "/api"  # Use relative path for ALB routing

# Backend configuration - ClusterIP for ALB
backend:
  enabled: true
  image:
    registry: docker.io
    repository: huseyinbeller/book-review-backend
    tag: latest
    pullPolicy: IfNotPresent
  
  replicaCount: 2
  
  service:
    type: ClusterIP  # Use ClusterIP for ALB ingress
    port: 3000
    targetPort: 3000
  
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 250m
      memory: 256Mi
  
  env:
    mongoUrl: "mongodb://book-review-mongodb:27017/bookdb"

# MongoDB configuration
mongodb:
  enabled: true
  image:
    registry: docker.io
    repository: mongo
    tag: "6.0"
    pullPolicy: IfNotPresent
  
  replicaCount: 1
  
  service:
    type: ClusterIP
    port: 27017
    targetPort: 27017
  
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 250m
      memory: 512Mi
  
  auth:
    enabled: false
  
  persistence:
    enabled: true
    storageClass: "book-review-ebs-gp3"  # Use custom EBS GP3 storage class
    size: 20Gi  # Increased size for better MongoDB performance
    accessModes:
      - ReadWriteOnce

# Ingress configuration - ENABLED with custom domain
ingress:
  enabled: true  # Enable ALB ingress
  scheme: "internet-facing"
  sslRedirect: true
  certificateArn: "arn:aws:acm:eu-central-1:203918847014:certificate/1bc0f35e-7458-4e38-8f8f-79f3d811a344"  # SSL certificate will be auto-discovered for curtisdev.online
  
  # ArgoCD integration
  argocd:
    enabled: true  # Enable ArgoCD routing through the same ALB
    namespace: "argocd"
  
  # Custom domain configuration for curtisdev.online
  hosts:
    - host: book-review.curtisdev.online
      paths: []  # Use default paths (/, /api, /argocd)
  
  # Additional annotations for External DNS (if you have it configured)
  annotations:
    external-dns.alpha.kubernetes.io/hostname: book-review.curtisdev.online
    # Uncomment if you have ACM certificate for *.curtisdev.online
    # alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:us-west-2:YOUR-ACCOUNT:certificate/YOUR-CERT-ID"

# Security contexts
podSecurityContext:
  runAsUser: 0     # Run pod as root
  runAsGroup: 0    # Run pod as root group
  fsGroup: 0       # Set filesystem group to root

securityContext:
  capabilities:
    drop:
    - ALL
    add:
    - CHOWN        # Allow changing file ownership
    - DAC_OVERRIDE # Override file access controls
    - SETGID       # Allow setting group ID
    - SETUID       # Allow setting user ID
    - NET_BIND_SERVICE  # Allow binding to privileged ports
  readOnlyRootFilesystem: false
  runAsNonRoot: false  # Allow nginx to run as root
  runAsUser: 0         # Run as root for nginx compatibility
  allowPrivilegeEscalation: false 